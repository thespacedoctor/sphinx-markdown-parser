{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"imagcoll",
				"soxs> image collection from directory, list of fits or sof\tcomp"
			],
			[
				"imagcol",
				"soxs> sort image collection\tcomp"
			],
			[
				"basn",
				"os> basename from path\tcomp"
			],
			[
				"deteco",
				"soxs> detector parameter lookup\tcomp"
			],
			[
				"lisdiction",
				"fundamentals> render list of dictionaries\tcomp"
			],
			[
				"pritn",
				"print variable\tcomp"
			],
			[
				"openfits",
				"astropy> open fits binary table file to read\tcomp"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"imagecol",
				"soxs> image collection from directory, list of fits or sof\tcomp"
			],
			[
				"abs",
				"soxs> relative to absolute path\tcomp"
			],
			[
				"keyw",
				"soxs> keyword lookup\tcomp"
			],
			[
				"yaml",
				"yaml> load file muldoc\tcomp"
			],
			[
				"yamml",
				"yaml> load file onedoc\tcomp"
			],
			[
				"loyaml",
				"fundamentals> import a directory of yaml file contents into a databse\tcomp"
			],
			[
				"opentemp",
				"open utf8 file to read \tcomp"
			],
			[
				"soxs",
				"soxs> image collection from directory, list of fits or sof\tcomp"
			],
			[
				"operead",
				"tmpx> open:file open read\ttag"
			],
			[
				"lsdirec",
				"os> list directories only\tcomp"
			],
			[
				"direct",
				"os> folder:directory path of this module\ttag"
			],
			[
				"lsfi",
				"os> list file only\tcomp"
			],
			[
				"homedir",
				"get user home directory path\tcomp"
			],
			[
				"worker",
				"tmpx> class module worker tmpx\tcomp"
			],
			[
				"clas",
				"tmpx> class\tcomp"
			],
			[
				"home",
				"get user home directory path\tcomp"
			],
			[
				"outp",
				"outputFilePath"
			],
			[
				"list",
				"listOfCoordinates"
			],
			[
				"li",
				"listOfCoordinates"
			],
			[
				"tmpmth",
				"tmpx> class method\tcomp"
			],
			[
				"tmpmp",
				"tmpx> module general\tcomp"
			],
			[
				"sear",
				"re> regex search and replace\tcomp"
			],
			[
				"index",
				"for index value in enumerated list \tcomp"
			],
			[
				"tmpxmo",
				"tmpx> module general\tcomp"
			],
			[
				"log",
				"dl> log info\tcomp"
			],
			[
				"convertdic",
				"dms> convert_dictionary_to_mysql_table\tcomp"
			],
			[
				"const",
				"datetime> convert string to date\tcomp"
			],
			[
				"radeg",
				"dat> convert ra from sex to deg\tcomp"
			],
			[
				"named",
				"re> regex named group backreference\tcomp"
			],
			[
				"name",
				"re> regex named group\tcomp"
			],
			[
				"group",
				"re> matchObjects groups tuple\tcomp"
			],
			[
				"findi",
				"re> regex findall function\tcomp"
			],
			[
				"search",
				"re> search for regex\tcomp"
			],
			[
				"webc",
				"dwc> import dwc webcrawlers\tcomp"
			],
			[
				"writefile",
				"write to writeFile\tcomp"
			],
			[
				"csv",
				"csv> read file\tcomp"
			],
			[
				"for",
				"for row in rows\tcomp"
			],
			[
				"now",
				"time> now as string\tcomp"
			],
			[
				"insert",
				"ms> insert\tcomp"
			],
			[
				"sqlw",
				"dms> execute_mysql_write_query\tcomp"
			],
			[
				"err",
				"dl> log error\tcomp"
			],
			[
				"sql",
				"dms> sql read query\tcomp"
			],
			[
				"read",
				"dms> sql read query\tcomp"
			],
			[
				"writeto",
				"write to writeFile\tcomp"
			],
			[
				"openfil",
				"open utf8 file to write\tcomp"
			],
			[
				"oder",
				"collections> dict ordered\tcomp"
			],
			[
				"sqlc",
				"dct> sql to csv converter\tcomp"
			],
			[
				"sela",
				"tmpx> self arg tmpx\tcomp"
			],
			[
				"sqlqu",
				"dms> sql read query\tcomp"
			],
			[
				"searchre",
				"re> regex search and replace\tcomp"
			],
			[
				"def",
				"tmpx> def with logger\tcomp"
			],
			[
				"omnitmp",
				"tmpx> tmpx omnifocus iterate over projects\tcomp"
			],
			[
				"trans",
				"pessto> add transients to pesstoobjects table\tcomp"
			],
			[
				"sqw",
				"dms> execute_mysql_write_query\tcomp"
			],
			[
				"dimy",
				"dms> convert_dictionary_to_mysql_table\tcomp"
			],
			[
				"listfor",
				"sort list of dictionaries by ket value\tcomp"
			],
			[
				"zip",
				"for items in zip lists\tcomp"
			],
			[
				"rese",
				"re> regex search and replace\tcomp"
			],
			[
				"unicde",
				"unicode text string\tcomp"
			],
			[
				"decdeg",
				"dat> convert dec from sex to degrees\tcomp"
			],
			[
				"method",
				"tmpx> class method\tcomp"
			],
			[
				"mjd",
				"dat> getMJDFromSqlDate\tcomp"
			],
			[
				"decse",
				"dat> convert dec from sex to degrees\tcomp"
			],
			[
				"sqlq",
				"dms> execute_mysql_write_query\tcomp"
			],
			[
				"refin",
				"re> regex match function\tcomp"
			],
			[
				"dms",
				"dms> import:dms\ttag"
			],
			[
				"datestrin",
				"time> date to string\tcomp"
			],
			[
				"convert",
				"datetime> convert string to date\tcomp"
			],
			[
				"D",
				"DOTALL  (variable)"
			],
			[
				"readfi",
				"tmpx> read:file open read\ttag"
			],
			[
				"dryx",
				"dryxPython  (module)"
			],
			[
				"inse",
				"ms> insert\tcomp"
			],
			[
				"write",
				"open utf8 file to write\tcomp"
			],
			[
				"row",
				"for row in rows\tcomp"
			],
			[
				"general",
				"tmpx> module general\tcomp"
			],
			[
				"timed",
				"time> timedelta for subtraction addition\tcomp"
			],
			[
				"setting",
				"dps> settings\tcomp"
			],
			[
				"add",
				"add_hook_to_bitbucket_repo  (module)"
			],
			[
				"url",
				"urllib> encode string for url\tcomp"
			],
			[
				"sys",
				"sys> exit\tcomp"
			],
			[
				"bas",
				"os> basename from path\tcomp"
			],
			[
				"cop",
				"shutil> copy file\tcomp"
			],
			[
				"exis",
				"os> if file or folder exists\tcomp"
			],
			[
				"exi",
				"os> if file or folder exists\tcomp"
			],
			[
				"mod",
				"tmpx> packaged module\tcomp"
			],
			[
				"syst",
				"subprocess> system command with popen\tcomp"
			],
			[
				"load",
				"yaml> load file onedoc\tcomp"
			],
			[
				"cd",
				"os> change directory cd\tcomp"
			],
			[
				"xkw",
				"xt-kwarg_key_and_value\tsnip"
			],
			[
				"redir",
				"shutil> remove non empty directory\tcomp"
			],
			[
				"remo",
				"os> remove file\tcomp"
			],
			[
				"wri",
				"write to writeFile\tcomp"
			],
			[
				"openw",
				"tmpx> open file to write\tcomp"
			],
			[
				"copy",
				"subprocess> copy directory\tcomp"
			],
			[
				"w",
				"dryxPython.webcrawlers"
			],
			[
				"xmlfin",
				"xml> find all direct children with tag of current element\tcomp"
			],
			[
				"deb",
				"dl> log debug\tcomp"
			],
			[
				"opew",
				"tmpx> open file to write\tcomp"
			],
			[
				"open",
				"tmpx> open:file open read\ttag"
			],
			[
				"iter",
				"xml> iterate over nodes with tag\tcomp"
			],
			[
				"forch",
				"xml> for child in root\tcomp"
			],
			[
				"findit",
				"xml> find all direct children with tag of current element\tcomp"
			],
			[
				"getel",
				"xml> get attribute of element\tcomp"
			],
			[
				"findal",
				"xml> find all direct children with tag of current element\tcomp"
			],
			[
				"path",
				"dps> set_python_path\tcomp"
			],
			[
				"fileopen",
				"tmpx> file open read\tcomp"
			],
			[
				"web",
				"dwc> download single webpage from url\tcomp"
			],
			[
				"tmdef",
				"tmpx> def with logger\tcomp"
			],
			[
				"wcs",
				"wcs> print wsc contents\tcomp"
			],
			[
				"mv",
				"os> mv file\tcomp"
			],
			[
				"rase",
				"dat> ra sexegesimal to decimal\tcomp"
			],
			[
				"exten",
				"os> filename without extension\tcomp"
			],
			[
				"module",
				"path to this module file\tcomp"
			],
			[
				"page",
				"pageHeader\tdryx"
			],
			[
				"header",
				"pageHeader\tdryx"
			],
			[
				"col",
				"column-tbs\tdryx"
			],
			[
				"forro",
				"for-row-in-rows\tgen> for row in rows"
			],
			[
				"pro",
				"projectSetup\tdryx"
			],
			[
				"import",
				"import--matplotlib\tdryx"
			],
			[
				"t",
				"tag_file  (module)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "sphinx_markdown_parser/markdown_parser.py",
			"settings":
			{
				"buffer_size": 20052,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "sphinx_markdown_parser/parser.py",
			"settings":
			{
				"buffer_size": 92,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 21 files for \"replace\"\n\n/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/docs/conf.py:\n   61  github_doc_root = 'https://github.com/rtfd/recommonmark/tree/master/docs/'\n   62  \n   63: # The version info for the project you're documenting, acts as replacement for\n   64  # |version| and |release|, also used in various other places throughout the\n   65  # built documents.\n\n/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/sphinx_markdown_parser/commonmark_parser.py:\n  138          # TODO this should probably only remove the extension for local paths,\n  139          # i.e. not uri's starting with http or other external prefix.\n  140:         if ext.replace('.', '') in self.supported:\n  141:             destination = destination.replace(ext, '')\n  142          ref_node['refuri'] = destination\n  143          # TODO okay, so this is acutally not always the right line number, but\n\n/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/sphinx_markdown_parser/markdown_parser.py:\n   22  a, bdo, br, img, map, object, q, script, span, sub, sup\n   23  button, input, label, select, textarea\n   24: \"\"\".replace(\",\", \"\").split())\n   25  INVALID_ANCHOR_CHARS = re.compile(\n   26      \"[^-_:.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]\")\n   ..\n  131          frontmatter = self.get_frontmatter(inputstring)\n  132  \n  133:         inputstring = inputstring.replace(\"{{TOC}}\", \"1234TOC1234\")\n  134  \n  135          # ALLOW FOR MMD STYLE SUP/SUB-SCRIPTS\n  ...\n  192      def prep_raw_html(self):\n  193          # code adapted from markedown.core.RawHtmlPostprocessor\n  194:         replacements = OrderedDict()\n  195          for i in range(self.md.htmlStash.html_counter):\n  196              html = self.md.htmlStash.rawHtmlBlocks[i]\n  197              if self.isblocklevel(html):\n  198:                 replacements[\"<p>%s</p>\" %\n  199                               (self.md.htmlStash.get_placeholder(i))] = \\\n  200                      html + \"\\n\"\n  201:             replacements[self.md.htmlStash.get_placeholder(i)] = html\n  202:         self.raw_html = replacements\n  203:         if replacements:\n  204              self.raw_html_k = re.compile(\n  205                  \"(\" + \"|\".join(re.escape(k) for k in self.raw_html) + \")\")\n\n/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/sphinx_markdown_parser/transform.py:\n   98              os.path.exists(abspath) and abspath.startswith(self.root_dir)\n   99          ):\n  100:             # REPLACE THE PATH SEPARATOR IF RUNNING ON NON-UNIX ENVIRONMENT\n  101              if os.path.sep != '/':\n  102:                 relpath = relpath.replace(os.path.sep, '/')\n  103              docpath = '/' + relpath.rsplit('.', 1)[0]\n  104              # REWRITE SUFFIX TO HTML, THIS IS SUBOPTIMAL\n  ...\n  197                  'numbered': numbered\n  198              },\n  199:             content=['%s <%s>' % (k, v.replace(\".html\", \"\")) for k, v in refs]\n  200          )\n  201  \n  ...\n  295          return None\n  296  \n  297:     def find_replace(self, node):\n  298:         \"\"\"Try to find replace node for current node.\n  299  \n  300          Parameters\n  301          ----------\n  302          node : docutil node\n  303:             Node to find replacement for.\n  304  \n  305          Returns\n  306          -------\n  307          nodes : node or list of node\n  308:             The replacement nodes of current node.\n  309:             Returns None if no replacement can be found.\n  310          \"\"\"\n  311          newnode = None\n  ...\n  329                  self.current_level = node['level']\n  330          to_visit = []\n  331:         to_replace = []\n  332          for c in node.children[:]:\n  333:             newnode = self.find_replace(c)\n  334              if newnode is not None:\n  335:                 to_replace.append((c, newnode))\n  336              else:\n  337                  to_visit.append(c)\n  338  \n  339:         for oldnode, newnodes in to_replace:\n  340:             node.replace(oldnode, newnodes)\n  341  \n  342          for child in to_visit:\n\n23 matches across 4 files\n",
			"settings":
			{
				"buffer_size": 4080,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "sphinx_markdown_parser/transform.py",
			"settings":
			{
				"buffer_size": 12731,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"tab",
				"Table Cleaner: Align Table"
			],
			[
				"tabl",
				"Table Cleaner: Align Table"
			],
			[
				"clea",
				"Table Cleaner: Align Table"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"gitadd",
				"Git: Add..."
			],
			[
				"git push",
				"Git: Push Current Branch"
			],
			[
				"git ",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"ipy",
				"SublimeREPL: Python - IPython"
			],
			[
				"run",
				"PythonTestRunner: Run test"
			],
			[
				"runtet",
				"PythonTestRunner: Run test"
			],
			[
				"test",
				"PythonTestRunner: Run test"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Discover Packages"
			],
			[
				"pack",
				"Package Control: Add Channel"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"subsav",
				"SublimeLinter: Load-Save Linting"
			],
			[
				"linter",
				"SublimeLinter: Background Linting"
			],
			[
				"sublin",
				"SublimeLinter: Show Error List"
			],
			[
				"pl",
				"Set Syntax: Plain Text"
			],
			[
				"Set Syntax: Tasks",
				"Set Syntax: Tasks"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"Snippet: type",
				"Snippet: gen> is instance of type"
			],
			[
				"plain",
				"Set Syntax: Plain Text"
			],
			[
				"Snippet: search",
				"Snippet: re> regex search function"
			],
			[
				"Snippet: searh",
				"Snippet: re> search for regex"
			],
			[
				"Snippet: sear",
				"Snippet: re> search for regex"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"syntax sni",
				"Set Syntax: Sublime Text Snippet (Raw)"
			],
			[
				"Snippet: mysqlw\t",
				"Snippet: dms> exe mysql write command given sql query"
			],
			[
				"Snippet: kwar\t",
				"Snippet: gen> kwargs"
			],
			[
				"bro",
				"Google Apps Scripts: Browse projects"
			],
			[
				"scriot",
				"Google Apps Scripts: Browse projects"
			],
			[
				"au",
				"Google Apps Scripts: Authenticate"
			],
			[
				"goo",
				"Google Apps Scripts: Authenticate"
			],
			[
				"google",
				"Google Apps Scripts: Authenticate"
			],
			[
				"googleapp",
				"Google Apps Scripts: Authenticate"
			],
			[
				"brows",
				"Google Apps Scripts: Browse projects"
			],
			[
				"auth",
				"Google Apps Scripts: Authenticate"
			],
			[
				"brow",
				"Google Apps Scripts: Browse projects"
			],
			[
				"googlea",
				"Google Apps Scripts: Authenticate"
			],
			[
				"googler",
				"Google Apps Scripts: Authenticate"
			],
			[
				"google a",
				"Google Apps Scripts: Browse projects"
			],
			[
				"goog",
				"Google Apps Scripts: Browse projects"
			],
			[
				"Snippet: clss",
				"Snippet: gen> class tmpx"
			],
			[
				"Snippet: doc",
				"Snippet: docopt> usage tempx"
			],
			[
				"Snippet: docop",
				"Snippet: docopt> usage tempx"
			],
			[
				"Snippet: docop\t",
				"Snippet: docopt> usage tempx"
			],
			[
				"Snippet: tmpx",
				"Snippet: mpl> tmpx matplotlib figure plot"
			],
			[
				"Snippet: plot\t",
				"Snippet: mpl> mpl scatter plot"
			],
			[
				"Snippet: read\t",
				"Snippet: jq> ready event function"
			],
			[
				"Snippet: popen",
				"Snippet: subprocess> execute system command with popen"
			],
			[
				"Snippet: open\t",
				"Snippet: gen> file open read"
			],
			[
				"Snippet: def",
				"Snippet: gen> def"
			],
			[
				"Snippet: match\t",
				"Snippet: re> match with regex"
			],
			[
				"Snippet: parent\t",
				"Snippet: jq> get parent of each element in set of matched elements optionally filtered by selector"
			],
			[
				"Snippet: templa",
				"Snippet: jq> module template"
			],
			[
				"Snippet: docstrin",
				"Snippet: dpc> setup docstring keys from selected usage options"
			],
			[
				"Snippet: setupw",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: mix\t",
				"Snippet: scss> mixin"
			],
			[
				"Snippet: mix",
				"Snippet: = Shortcut to @mixin"
			],
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"Snippet: mixin",
				"Snippet: = Shortcut to @mixin"
			],
			[
				"Snippet: darken",
				"Snippet: scss> darken color"
			],
			[
				"Snippet: sedoc",
				"Snippet: dpc> setup docstring keys from selected usage options"
			],
			[
				"Snippet: setpwo",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: fill",
				"Snippet: dpc> fill kwargs for test method based on selected usage string"
			],
			[
				"Snippet: testcom",
				"Snippet: dpc> class method to test a command line usage"
			],
			[
				"Snippet: setdoc",
				"Snippet: dpc> setup docstring keys from selected usage options"
			],
			[
				"Snippet: setip",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: dpcwor",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: dpcke",
				"Snippet: dpc> setup worker function parameters from usage method"
			],
			[
				"Snippet: debu",
				"Snippet: dl> log debug"
			],
			[
				"Snippet: exist",
				"Snippet: gen> test directory path exists"
			],
			[
				"Snippet: module",
				"Snippet: os> directory path of this module"
			],
			[
				"Snippet: kw",
				"Snippet: dpc> fill kwargs for test method based on selected usage string"
			],
			[
				"Snippet: kwa",
				"Snippet: dpc> fill kwargs for test method based on selected usage string"
			],
			[
				"Snippet: kwar",
				"Snippet: dpc> fill kwargs for test method based on selected usage string"
			],
			[
				"java",
				"Set Syntax: Java"
			],
			[
				"perl",
				"SublimeREPL: Perl"
			],
			[
				"Snippet: cg",
				"Snippet: gen> module cgi"
			],
			[
				"Snippet: cgi",
				"Snippet: gen> module cgi"
			],
			[
				"Snippet: progre",
				"Snippet: dhf> get progress bar tbs style"
			],
			[
				"Snippet: ul",
				"Snippet: dhf> get unordered list"
			],
			[
				"Snippet: repsonse",
				"Snippet: dhf> create twitter bootstrap responsive nav bar component"
			],
			[
				"Snippet: dropdown",
				"Snippet: dhf> create dropdown option list"
			],
			[
				"Snippet: anc",
				"Snippet: dhf> get anchor"
			],
			[
				"Snippet: li",
				"Snippet: dhf> li"
			],
			[
				"Snippet: form",
				"Snippet: dhf> form"
			],
			[
				"Snippet: dhftab",
				"Snippet: dhf> get tabbable navigation"
			],
			[
				"Snippet: dhfdiv",
				"Snippet: dhf> get basic div w block content"
			],
			[
				"Snippet: conte",
				"Snippet: gen> append to content"
			],
			[
				"Snippet: unde",
				"Snippet: dhf> get unordered list"
			],
			[
				"Snippet: cont",
				"Snippet: gen> append to content"
			],
			[
				"Snippet: button\t",
				"Snippet: dhf> get button method"
			],
			[
				"Snippet: content",
				"Snippet: gen> append to content"
			],
			[
				"Snippet: con",
				"Snippet: gen> append to content"
			],
			[
				"synsubl",
				"Set Syntax: Sublime Completions"
			],
			[
				"Snippet: ap",
				"Snippet: gen> append to content"
			],
			[
				"Snippet: reg",
				"Snippet: snip> placeholder regex"
			],
			[
				"syntsublime",
				"Set Syntax: Sublime Text Commands"
			],
			[
				"syntsni",
				"Set Syntax: Sublime Text Snippet (Raw)"
			],
			[
				"Snippet: dhfcode",
				"Snippet: dhf> get code section"
			],
			[
				"Snippet:dhf column",
				"Snippet: dhf> get column block for twiiter bootstrap static layout grid"
			],
			[
				"Snippet: dhf div",
				"Snippet: dhf> get basic div w block content"
			],
			[
				"Snippet: dhfrow",
				"Snippet: dhf> create row using twitter bootstrap static layout grid"
			],
			[
				"scss",
				"Set Syntax: SCSS"
			],
			[
				"scope",
				"Scope Hunter: Show Scope Under Cursor(s)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"syn",
				"Set Syntax: Python"
			],
			[
				"ipython",
				"SublimeREPL: Python - IPython"
			],
			[
				"ipyothn",
				"SublimeREPL: Python - IPython"
			],
			[
				"rep",
				"SublimeREPL: Python - IPython"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"ini",
				"Set Syntax: INI"
			],
			[
				"fet",
				"Fetch: File"
			],
			[
				"file",
				"Fetch: File"
			],
			[
				"fetch",
				"Fetch: Package"
			],
			[
				"synhtml",
				"Set Syntax: HTML"
			],
			[
				"emme",
				"Emmet: Expand Abbreviation"
			],
			[
				"Snippet: user",
				"Snippet: user's user name"
			],
			[
				"cre",
				"Create Snippet"
			]
		],
		"width": 610.0
	},
	"console":
	{
		"height": 326.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/sphinx_markdown_parser"
	],
	"file_history":
	[
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/utils/index.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/files/pinhole_map.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/files/dispersion_map.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/soxs_mdark.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/tests/test_soxs_mdark.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/CHANGES.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/__init__.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/tests/test_soxs_disp_solution.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/index.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/recipes/index.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/files/index.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/files.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/_base_recipe_.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/sphinx_markdown_parser/markdown_parser.py",
		"/Users/Dave/Dropbox/config/dave-macbook/soxspipe/soxspipe.yaml",
		"/Users/Dave/git_repos/_services_/ansible-playbooks/roles/create-user-dry/files/aliases.sh",
		"/Users/Dave/git_repos/_services_/ansible-playbooks/roles/create-user-dry/files/macbook_aliases.sh",
		"/usr/local/bin/create_sof_from_directory_contents.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/resources/xsh_detector_parameters.yaml",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/commonutils/set_of_files.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/tests/test__base_recipe_.py",
		"/Users/Dave/anaconda/pkgs/pylint-2.4.4-py37_0/lib/python3.7/site-packages/pylint/message/message_definition.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/commonutils/tests/test_keyword_lookup.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/_api/soxspipe.commonutils.rst",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/requirements.txt",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/__version__.py",
		"/Users/Dave/Dropbox/server-sync/soxs-eso-data/dry-notebooks/soxs-pipe/scripts/create_sof_from_directory_contents.py",
		"/Users/Dave/Dropbox/server-sync/soxs-eso-data/xshooter-pipeline-data/raw_data/xshooter-darks/sofs/nir_darks_5s.sof",
		"/Users/Dave/Dropbox/Desktop/GLOBALutils.py",
		"/Users/Dave/git_repos/_forked_/marshallEngine/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/HMpTy/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/khufu/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/atelParser/docs/source/conf.py",
		"/Users/Dave/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/docs/source/conf.py",
		"/Users/Dave/git_repos/_webapps_/marshall_webapp/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/fundamentals/docs/source/conf.py",
		"/Users/Dave/git_repos/_templates_/frankenstein/python-package-template/xxxpython_package_namexxx/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/neddy/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/transientNamer/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/sherlock/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/astrocalc/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/soxs_mbias.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/build/html/_api/soxspipe.recipes._base_recipe_.html",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/build/html/_autosummary/soxspipe.recipes._base_recipe_.html",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/test_settings.yaml",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/default_settings.yaml",
		"/Users/Dave/Library/Application Support/Sublime Text 3/Packages/User/Python/module_snippets/soxspipe/Python.soxs.write-frame-to-save-to-disk.sublime-snippet",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/commonutils/__init__.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/commonutils/tests/test_detector_lookup.py",
		"/Users/Dave/Dropbox/server-sync/soxs-eso-data/xshooter-pipeline-data/raw_data/xshooter-bias/sof/bias_uvb_1x1.sof",
		"/Users/Dave/Library/Application Support/Sublime Text 3/Packages/User/Python/module_snippets/soxspipe/Python.soxs.stack-combine-frames.sublime-snippet",
		"/Users/Dave/Library/Application Support/Sublime Text 3/Packages/User/Python/module_snippets/soxspipe/Python.soxs.detector-parameter-lookup.sublime-snippet",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/commonutils/keyword_lookup.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/commonutils/detector_lookup.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe.sublime-workspace",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/Jenkinsfile",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/tests/test_soxs_mbias.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/mbias.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/recipes/tests/test_mbias.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/resources/soxs_detector_parameters.yaml",
		"/Users/Dave/Dropbox/Desktop/soxs_workspace/ccdproc_tests/ccdproc_imagecollections.py",
		"/Users/Dave/Dropbox/Desktop/fits_inspector/fits-inspector.py",
		"/Users/Dave/Dropbox/Desktop/soxs_workspace/ccdproc_tests/ccdproc_ccddata.py",
		"/Users/Dave/Library/Application Support/Sublime Text 3/Packages/User/Python/module_snippets/astropyio/Python.fits.open-fits-file.sublime-snippet",
		"/Users/Dave/.bashrc",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/Makefile",
		"/Users/Dave/git_repos/_packages_/python/marshallEngine/docs/source/conf.py",
		"/Users/Dave/git_repos/_webapps_/dryxPyramid/docs/source/conf.py",
		"/Users/Dave/Library/Caches/com.binarynights.ForkLift-3/FileCache/5B6AC932-E8C9-4D5C-B53C-BB7B891B7BA5/sherlock_query_example.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/introduction_to_soxspeipe.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/recipes_overview.md",
		"/Users/Dave/git_repos/_packages_/python/rockAtlas/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_vendor_/ginga/doc/conf.py",
		"/Users/Dave/git_repos/_packages_/python/rockfinder/docs/source/conf.py",
		"/Users/Dave/git_repos/_vendor_/linetools/astropy_helpers/astropy_helpers/sphinx/conf.py",
		"/Users/Dave/git_repos/_packages_/python/headjack/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/polyglot/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/deckster/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/gcnParser/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/tastic/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/marshallEngine_trash/docs/source/conf.py",
		"/Users/Dave/git_repos/_vendor_/nttpipeline/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/rockAtlas/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/panstamps/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/crowdedText/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/breaker/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/picaxe/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_vendor_/linetools/docs/conf.py",
		"/Users/Dave/git_repos/_packages_/python/crowdedText/docs/source/conf.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/docs/conf.py",
		"/Users/Dave/git_repos/_packages_/python/muppet/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/picaxe/docs/source/conf.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/examples/javascript/docs/conf.py",
		"/Users/Dave/git_repos/_packages_/python/breaker/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/sloancone/bk_docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/frankenstein/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/bygone/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/sloancone/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/sloancone/bk_docs/source/conf.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/tests/sphinx_code_block/conf.py",
		"/Users/Dave/git_repos/_packages_/python/markdust/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/tests/sphinx_custom_md/conf.py",
		"/Users/Dave/git_repos/_packages_/python/ENGRAVEAlerts/docs/source/conf.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/tests/sphinx_generic/conf.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/tests/sphinx_indented_code/conf.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/tests/sphinx_nested_header_block/conf.py",
		"/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/tests/sphinx_xref/conf.py",
		"/Users/Dave/git_repos/_packages_/python/polyglot/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/headjack/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/rockfinder/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/frankenstein/docs/source/conf.py",
		"/Users/Dave/git_repos/_packages_/python/marshallEngine_trash/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/deckster/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/tastic/docs/source/_api/conf.py",
		"/Users/Dave/git_repos/_packages_/python/markdust/docs/source/conf.py",
		"/Users/Dave/git_repos/_services_/download_pinboard/lib/pinboard/tests/sample_conf.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/autosummary_include.rst",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/docstring_test.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/cl_utils.py",
		"/Users/Dave/Library/Caches/com.binarynights.ForkLift-3/FileCache/CE3BA355-7898-45B1-B21A-0BB5A95CA6B1/sherlock_query_example.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/build/markdown/_autosummary/soxspipe.recipes.soxs_mbias.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/README.md",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/_static/whistles-theme/Contents/Resources/dryx.css",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/soxspipe/utKit.py",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/docs/source/_static/pygments.css",
		"/Users/Dave/git_repos/_services_/ansible-playbooks/setup-marshall-webserver.yml",
		"/Users/Dave/git_repos/_packages_/python/soxspipe/setup.py"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"*.py",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"replace",
			"wzxhzdk",
			"code",
			"ima",
			"/"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "sphinx_markdown_parser/markdown_parser.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20052,
						"regions":
						{
						},
						"selection":
						[
							[
								6538,
								6538
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4331.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "sphinx_markdown_parser/parser.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 92,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4080,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										262,
										269
									],
									[
										672,
										679
									],
									[
										753,
										760
									],
									[
										1122,
										1129
									],
									[
										1392,
										1399
									],
									[
										1615,
										1622
									],
									[
										1838,
										1845
									],
									[
										2003,
										2010
									],
									[
										2092,
										2099
									],
									[
										2123,
										2130
									],
									[
										2480,
										2487
									],
									[
										2625,
										2632
									],
									[
										2894,
										2901
									],
									[
										3020,
										3027
									],
									[
										3071,
										3078
									],
									[
										3229,
										3236
									],
									[
										3367,
										3374
									],
									[
										3440,
										3447
									],
									[
										3626,
										3633
									],
									[
										3720,
										3727
									],
									[
										3800,
										3807
									],
									[
										3947,
										3954
									],
									[
										3980,
										3987
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1844,
								1844
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										2456,
										2457
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"default_dir": "/Users/Dave/git_repos/_vendor_/sphinx-markdown-parser/sphinx_markdown_parser",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 10.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "sphinx_markdown_parser/transform.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12731,
						"regions":
						{
						},
						"selection":
						[
							[
								2512,
								2512
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 202.0
	},
	"output.find_results":
	{
		"height": 161.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.scopehunter.results":
	{
		"height": 152.0
	},
	"pinned_build_system": "Packages/User/nosetest.sublime-build",
	"project": "sphinx_markdown_parser.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"_base_recipe_.py",
				"soxspipe/soxspipe/recipes/_base_recipe_.py"
			],
			[
				"soxspipe/commonutils/set_of_files.py",
				"soxspipe/soxspipe/commonutils/set_of_files.py"
			],
			[
				"conf",
				"soxspipe/docs/source/conf.py"
			],
			[
				"mbas",
				"soxspipe/recipes/soxs_mbias.py"
			],
			[
				"test",
				"soxspipe/recipes/tests/test_soxs_mbias.py"
			],
			[
				"cl",
				"soxspipe/cl_utils.py"
			],
			[
				"testset",
				"soxspipe/test_settings.yaml"
			],
			[
				"testbase",
				"soxspipe/recipes/tests/test__base_recipe_.py"
			],
			[
				"dark",
				"soxspipe/recipes/tests/test_mdark.py"
			],
			[
				"test_so",
				"soxspipe/commonutils/tests/test_sof_of_files.py"
			],
			[
				"cone",
				"neddy/conesearch.py"
			],
			[
				"tess",
				"neddy/tests/test_namesearch.py"
			],
			[
				"_import_asassn_transients_list",
				"pessto_marshall_engine/database/imports/asassn/tests/test__import_asassn_transients_list.py"
			],
			[
				"_import_lsq_discovery_data_to_transientbucket",
				"pessto_marshall_engine/database/imports/lsq/_import_lsq_discovery_data_to_transientbucket.py"
			],
			[
				"reset",
				"pessto_marshall_engine/database/imports/lsq/helper_scripts/mysql/reset_lssndb_tables.sql"
			],
			[
				"check",
				"pessto_marshall_engine/database/housekeeping/tests/test_check_for_movers.py"
			],
			[
				"tranup",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"resu",
				"pessto_marshall_engine/database/housekeeping/archived_object_resurrector.py"
			],
			[
				"uptraf",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"downsds",
				"pessto_marshall_engine/webapp/cachers/download_sdss_images.py"
			],
			[
				"pes",
				"pessto_marshall_engine.sublime-project"
			],
			[
				"rese",
				"pessto_marshall_engine/database/housekeeping/tablecleaner/rescue_orphaned_objects_in_transientbucket.py"
			],
			[
				"resur",
				"pessto_marshall_engine/database/housekeeping/archived_object_resurrector.py"
			],
			[
				"trans",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"bul",
				"pessto_marshall_engine/plots/lightcurves/bulk_generate_pessto_object_lightcurves.py"
			],
			[
				"ob_",
				"pessto_marshall_engine/webapp/marshall/forms/generate_ob_form.py"
			],
			[
				"update",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"updatetrans",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"bulk",
				"pessto_marshall_engine/plots/lightcurves/bulk_generate_pessto_object_lightcurves.py"
			],
			[
				"light",
				"pessto_marshall_engine/plots/lightcurves/generate_pessto_object_lightcurve.py"
			],
			[
				"lsqdi",
				"pessto_marshall_engine/database/imports/lsq/import_new_lsq_discoveries.py"
			],
			[
				"__in",
				"pessto_marshall_engine/downloaders/__init__.py"
			],
			[
				"_log",
				"pessto_marshall_engine/database/tools/add_transient_history_log_entry.py"
			],
			[
				"gener",
				"pessto_marshall_engine/plots/lightcurves/generate_pessto_object_lightcurve.py"
			],
			[
				"impate",
				"pessto_marshall_engine/database/imports/import_atel_transients.py"
			],
			[
				"download_bright_sn_list_images",
				"pessto_marshall_engine/webapp/cachers/download_bright_sn_list_images.py"
			],
			[
				"import_bright_sn_list_transients",
				"pessto_marshall_engine/database/imports/import_bright_sn_list_transients.py"
			],
			[
				"pm_import_bright_sn_list_transients",
				"pessto_marshall_engine/database/imports/import_bright_sn_list_transients.py"
			],
			[
				"_import_to_fs_asassn_table",
				"pessto_marshall_engine/database/imports/asassn/tests/test__import_to_fs_asassn_table.py"
			],
			[
				"atel",
				"pessto_marshall_engine/database/imports/import_atel_transients.py"
			],
			[
				"target",
				"pessto_marshall_engine/tests/input/data/marshall_dropbox/eJan13/spectroscopy/arc_20120824_Gr11_Free_slit1.0_56442_1.fits"
			],
			[
				"cross",
				"pessto_marshall_engine/database/nttarchiver/processors/crossmatch_ntt_data_against_transientbucket.py"
			],
			[
				"filename",
				"pessto_marshall_engine/database/nttarchiver/helper_scripts/mysql/_set_currentFilename_in_database.sql"
			],
			[
				"replot",
				"pessto_marshall_engine/plots/eso_phase_iii/refresh_useful_plots.py"
			],
			[
				"misc",
				"pessto_marshall_engine/database/nttarchiver/helper_scripts/mysql/__miscellaneous_fixes.sql"
			],
			[
				"plots",
				"pessto_marshall_engine/plots/eso_phase_iii/refresh_useful_plots.py"
			],
			[
				"plot",
				"pessto_marshall_engine/plots/eso_phase_iii/refresh_useful_plots.py"
			],
			[
				"expophas",
				"pessto_marshall_engine/database/export/tests/test_export_phaseIII_metadata_csvs.py"
			],
			[
				"comment",
				"pessto_marshall_engine/database/tools/add_comment_to_pessto_marshall.py"
			],
			[
				"tesass",
				"pessto_marshall_engine/database/nttarchiver/processors/tests/test_associate_efosc_images_with_spectra.py"
			],
			[
				"tesas",
				"pessto_marshall_engine/database/imports/asassn/tests/test__import_to_fs_asassn_table.py"
			],
			[
				"tra",
				"pessto_marshall_engine/database/housekeeping/add_new_transients_to_pesstoobjects_table.py"
			],
			[
				"testocp",
				"pessto_marshall_engine/database/imports/tests/test_import_tocp_transients.py"
			],
			[
				"imbri",
				"pessto_marshall_engine/database/imports/tests/test_import_bright_sn_list_transients.py"
			],
			[
				"tranpe",
				"pessto_marshall_engine/database/housekeeping/add_new_transients_to_pesstoobjects_table.py"
			],
			[
				"testcrts",
				"pessto_marshall_engine/commonutils/tests/test_get_image_url_from_crts_voevent_links.py"
			],
			[
				"clean_ntt_dropbox_folder",
				"pessto_marshall_engine/database/nttarchiver/ingesters/clean_ntt_dropbox_folder.py"
			],
			[
				"tranpes",
				"pessto_marshall_engine/database/housekeeping/add_new_transients_to_pesstoobjects_table.py"
			],
			[
				"tesimbr",
				"pessto_marshall_engine/database/imports/tests/test_import_bright_sn_list_transients.py"
			],
			[
				"ide",
				"pessto_marshall_engine/webapp/marshall/tickets/single_ticket/ticket_building_blocks/identity_block.py"
			],
			[
				"update_transientbucketsummaries_flags.py",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"brigh",
				"pessto_marshall_engine/database/imports/tests/test_import_bright_sn_list_transients.py"
			],
			[
				"commet",
				"pessto_marshall_engine/webapp/marshall/tickets/single_ticket/tabs/comments.py"
			],
			[
				"comme",
				"pessto_marshall_engine/webapp/marshall/tickets/single_ticket/ticket_building_blocks/comments_block.py"
			],
			[
				"tetocp",
				"pessto_marshall_engine/database/imports/tests/test_import_tocp_transients.py"
			],
			[
				"impmas",
				"pessto_marshall_engine/database/imports/import_master_transients.py"
			],
			[
				"impomas",
				"pessto_marshall_engine/database/imports/import_master_transients.py"
			],
			[
				"testto",
				"pessto_marshall_engine/database/imports/tests/test_import_tocp_transients.py"
			],
			[
				"import",
				"pessto_marshall_engine/database/imports/import_master_transients.py"
			],
			[
				"tetsmas",
				"pessto_marshall_engine/database/imports/tests/test_import_master_transients.py"
			],
			[
				"master",
				"pessto_marshall_engine/database/imports/import_master_transients.py"
			],
			[
				"class",
				"pessto_marshall_engine/webapp/marshall/forms/classify_object_form.py"
			],
			[
				"transum",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"exportraw",
				"pessto_marshall_engine/database/export/export_raw_images_used_to_create_final_image.py"
			],
			[
				"rescue_orphaned_objects_in_transientbucket",
				"pessto_marshall_engine/database/housekeeping/tablecleaner/rescue_orphaned_objects_in_transientbucket.py"
			],
			[
				"conesearch_transientbucket",
				"pessto_marshall_engine/conesearchers/conesearch_transientbucket.py"
			],
			[
				"update_transientbucketsummaries_flags",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"rewri",
				"pessto_marshall_engine/database/nttarchiver/fitsmanipulator/rewrite_fits_headers.py"
			],
			[
				"export",
				"pessto_marshall_engine/database/export/export_phase_III_data.py"
			],
			[
				"impoate",
				"pessto_marshall_engine/database/imports/import_atel_transients.py"
			],
			[
				"testex",
				"pessto_marshall_engine/database/export/tests/test_export_pessto_atels.py"
			],
			[
				"upda",
				"pessto_marshall_engine/database/housekeeping/flags/update_transientbucketsummaries_flags.py"
			],
			[
				"tesimtran",
				"pessto_marshall_engine/database/imports/asassn/tests/test__import_asassn_discoveries_to_transientbucket.py"
			],
			[
				"impas",
				"pessto_marshall_engine/database/imports/asassn/_import_to_fs_asassn_table.py"
			],
			[
				"tesassn",
				"pessto_marshall_engine/database/imports/asassn/tests/test__import_to_fs_asassn_table.py"
			],
			[
				"hoo",
				"gitflow/add_hook_to_bitbucket_repo.py"
			],
			[
				"tesad",
				"gitflow/tests/test_add_hook_to_bitbucket_repo.py"
			],
			[
				"tesgi",
				"gitflow/tests/test_add_git_repo_to_tower.py"
			],
			[
				"csv",
				"dryxPython/dryxPython/csvtools/sqlquery_to_csv_file.py"
			],
			[
				"ads",
				"dryxPython/dryxPython/webcrawlers/papers/tests/test_ads_query.py"
			],
			[
				"etchsd",
				"dryxPython/dryxPython/astrotools/tests/test_check_for_sdss_coverage.py"
			],
			[
				"testas",
				"dryxPython/dryxPython/astrotools/tests/test_astrometry_corrector.py"
			],
			[
				"sqlquery_to_csv_file.py",
				"dryxPython/dryxPython/csvtools/sqlquery_to_csv_file.py"
			],
			[
				"setup_main_clutil",
				"dryxPython/dryxPython/projectsetup/setup_main_clutil.py"
			],
			[
				"create",
				"dryxPython/dryxPython/packagecreator/createpythonpackage.py"
			],
			[
				"sca",
				"dryxPython/dryxPython/plotting/xy_scatter.py"
			],
			[
				"sqlquery_to_csv.py",
				"dryxPython/dryxPython/csvtools/sqlquery_to_csv_file.py"
			],
			[
				"human_readable",
				"dryxPython/dryxPython/csvtools/tests/test_human_readable.py"
			],
			[
				"teststrin",
				"dryxPython/dryxPython/convert/tests/test_string_of_values_to_list.py"
			],
			[
				"testx",
				"dryxPython/dryxPython/plotting/tests/test_xy_scatter.py"
			],
			[
				"xy",
				"dryxPython/dryxPython/plotting/xy_scatter.py"
			],
			[
				"table",
				"dryxPython/dryxPython/htmlframework/tables.py"
			],
			[
				"tesvoo",
				"dryxPython/dryxPython/tagging/tests/test_add_mavericks_tags_to_voodoopad.py"
			],
			[
				"",
				"dryxPython/dryxPython/tagging/add_mavericks_tags_to_voodoopad.py"
			],
			[
				"testadd",
				"dryxPython/dryxPython/tagging/tests/test_add_mavericks_tags_to_dayone.py"
			],
			[
				"voodoo",
				"dryxPython/dryxPython/tagging/add_mavericks_tags_to_voodoopad.py"
			],
			[
				"addtag",
				"dryxPython/dryxPython/tagging/add_mavericks_tags_to_dayone.py"
			],
			[
				"testdayone",
				"dryxPython/dryxPython/tagging/tests/test_add_mavericks_tags_to_dayone.py"
			],
			[
				"addon",
				"dryxPython/dryxPython/htmlframework/addons.py"
			],
			[
				"add",
				"dryxPython/dryxPython/htmlframework/addons.py"
			],
			[
				"modal",
				"dryx_assets/js/_dryx_modals.js"
			],
			[
				"typ",
				"dryxPython/dryxPython/htmlframework/typography.py"
			],
			[
				"astrot",
				"dryxPython/dryxPython/astrotools/__init__.py"
			],
			[
				"astro",
				"dryxPython/dryxPython/astrotools/__init__.py"
			],
			[
				"rasex",
				"dryxPython/dryxPython/astrotools/tests/test_ra_sexegesimal_to_decimal.py"
			],
			[
				"testdec",
				"dryxPython/dryxPython/astrotools/tests/test_declination_sexegesimal_to_decimal.py"
			],
			[
				"astrotool",
				"dryxPython/dryxPython/astrotools/__init__.py"
			],
			[
				"mysql",
				"dryxPython/dryxPython/mysql/__init__.py"
			],
			[
				"dryxtype",
				"dryx_assets/styles/sass/_dryx_type.scss"
			],
			[
				"htmlframework.p",
				"dryxPython/dryxPython/htmlframework/forms.py"
			],
			[
				"dryxicon",
				"dryx_assets/styles/sass/_dryx_icons.scss"
			],
			[
				"prset",
				"dryxPython/dryxPython/commonutils/tests/input/project_settings.yaml"
			],
			[
				"projec",
				"dryxPython/dryxPython/tests/input/project_settings.yaml"
			],
			[
				".git",
				"dryxPython/.gitignore"
			],
			[
				"set",
				"dryxPython/setup.py"
			],
			[
				"_mod",
				"dryx_assets/styles/sass/_modified_variables.scss"
			],
			[
				"_drnav",
				"dryx_assets/styles/sass/_dryx_navigation.scss"
			],
			[
				"bread",
				"/Users/Dave/Dropbox/templates/web/twitter_bootstrap/assets/styles/sass/_breadcrumbs.scss"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "soxs",
		"selected_items":
		[
			[
				"soxs",
				"~/git_repos/_packages_/python/soxspipe/soxspipe.sublime-project"
			],
			[
				"ansi",
				"~/git_repos/_services_/ansible-playbooks/ansible-playbooks.sublime-project"
			],
			[
				"te",
				"~/git_repos/_templates_/templates.sublime-project"
			],
			[
				"fran",
				"~/git_repos/_packages_/python/frankenstein/frankenstein.sublime-project"
			],
			[
				"cpl",
				"~/git_repos/_vendor_/xshooter_cpl_pipeline/xshooter_cpl_pipeline.sublime-project"
			],
			[
				"xsh",
				"~/git_repos/_vendor_/xshooter_cpl_pipeline/xshooter_cpl_pipeline.sublime-project"
			],
			[
				"dorm",
				"~/git_repos/_cronscripts_/dormammu_marshall_cronscripts/dormammu_marshall_cronscripts.sublime-project"
			],
			[
				"ans",
				"~/git_repos/_services_/ansible-playbooks/ansible-playbooks.sublime-project"
			],
			[
				"pans",
				"~/git_repos/_packages_/python/panstamps/panstamps.sublime-project"
			],
			[
				"pyth",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"as",
				"~/git_repos/_packages_/python/astrocalc/astrocalc.sublime-project"
			],
			[
				"sherlo",
				"~/git_repos/_packages_/python/sherlock/sherlock.sublime-project"
			],
			[
				"fund",
				"~/git_repos/_packages_/python/fundamentals/fundamentals.sublime-project"
			],
			[
				"python",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"xxx",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"xx",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"fun",
				"~/git_repos/_packages_/python/fundamentals/fundamentals.sublime-project"
			],
			[
				"jenk",
				"~/git_repos/_services_/jenkins-shared-library/jenkins-shared-library.sublime-project"
			],
			[
				"jen",
				"~/git_repos/_services_/jenkins-shared-library/jenkins-shared-library.sublime-project"
			],
			[
				"xxxp",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"templ",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"temp",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"sherloc",
				"~/git_repos/_packages_/python/sherlock/sherlock.sublime-project"
			],
			[
				"jh",
				"~/git_repos/_services_/jenkins-shared-library/jenkins-shared-library.sublime-project"
			],
			[
				"marsha",
				"~/git_repos/_webapps_/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"py",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"p",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"pyt",
				"~/git_repos/_templates_/python-package-template/xxxpython_package_namexxx/python-package-template.sublime-project"
			],
			[
				"pesma",
				"~/git_repos/pessto_marshall_engine/pessto_marshall_engine.sublime-project"
			],
			[
				"dryx",
				"~/git_repos/dryxPython/dryxPython.sublime-project"
			],
			[
				"lv",
				"~/git_repos/lv/lv.sublime-project"
			],
			[
				"conf",
				"~/.config/config files.sublime-project"
			],
			[
				"sher",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"con",
				"~/.config/config files.sublime-project"
			],
			[
				"she",
				"~/git_repos/sherlock/sherlock.sublime-project"
			],
			[
				"mars",
				"~/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"dr",
				"~/git_repos/dryxPython/dryxPython.sublime-project"
			],
			[
				"mupp",
				"~/git_repos/muppet/muppet.sublime-project"
			],
			[
				"dryxp",
				"~/git_repos/dryxPython/dryxPython.sublime-project"
			],
			[
				"near",
				"/Users/Dave/git_repos/nearby_galaxy_catalogue_builder/nearby_galaxy_catalogue_builder.sublime-project"
			],
			[
				"nea",
				"/Users/Dave/git_repos/nearby_galaxy_catalogue_builder/nearby_galaxy_catalogue_builder.sublime-project"
			],
			[
				"marvm03",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"w",
				"/Users/Dave/git_repos/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"ma",
				"/Users/Dave/git_repos/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"pesvm",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"mar",
				"/Users/Dave/git_repos/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"app",
				"/Users/Dave/git_repos/dryxApplescript/dryxApplescript.sublime-project"
			],
			[
				"applre",
				"/Users/Dave/git_repos/dryxApplescript/dryxApplescript.sublime-project"
			],
			[
				"pes3",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"pess",
				"/Users/Dave/git_repos/pesstoJS/pesstoJS.sublime-project"
			],
			[
				"pes",
				"/Users/Dave/git_repos/pesstoJS/pesstoJS.sublime-project"
			],
			[
				"pe3",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"p3",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"ma3",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"pe",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"3",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"mars3",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"dryxP",
				"/Users/Dave/git_repos/dryxPython/dryxPython.sublime-project"
			],
			[
				"marsh",
				"/Users/Dave/git_repos/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"dryxPython",
				"/Users/Dave/git_repos/dryxPython/dryxPython.sublime-project"
			],
			[
				"dryxsc",
				"/Users/Dave/git_repos/dryxScss/dryxScss.sublime-project"
			],
			[
				"dryxA",
				"/Users/Dave/git_repos/dryxApplescript/dryxApplescript.sublime-project"
			],
			[
				"dryxs",
				"/Users/Dave/git_repos/dryxScripts/dryxScripts.sublime-project"
			],
			[
				"trans",
				"/Users/Dave/git_repos/pessto_phaseIII_transient_catalogue/extras/pessto_phaseIII_transient_catalogue.sublime-project"
			],
			[
				"tra",
				"/Users/Dave/git_repos/pessto_phaseIII_transient_catalogue/pessto_phaseIII_transient_catalogue.sublime-project"
			],
			[
				"codeb",
				"/Users/Dave/git_repos/pessto_marshall_codebucket/pessto_marshall_codebucket.sublime-project"
			],
			[
				"ssdr2",
				"/Users/Dave/git_repos/marshall_pesstovm02_settings/marshall_pesstovm02_settings.sublime-project"
			],
			[
				"slo",
				"/Users/Dave/git_repos/sloancone/sloancone.sublime-project"
			],
			[
				"marshal",
				"/Users/Dave/git_repos/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"pessvm",
				"/Users/Dave/git_repos/settings_packages/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"marpes",
				"/Users/Dave/git_repos/settings_packages/marshall_pesstovm03_settings/marshall_pesstovm03_settings.sublime-project"
			],
			[
				"dry",
				"/Users/Dave/git_repos/dryxCommonCodes/dryxPython/dryxPython.sublime-project"
			],
			[
				"marwe",
				"/Users/Dave/git_repos/webapps/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"gaia",
				"/Users/Dave/git_repos/gaia_marshall_engine/gaia_marshall_engine.sublime-project"
			],
			[
				"rep",
				"/Users/Dave/git_repos/repster/repster.sublime-project"
			],
			[
				"peswe",
				"/Users/Dave/git_repos/webapps/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"pesswe",
				"/Users/Dave/git_repos/webapps/pessto_webapp/pessto_webapp.sublime-project"
			],
			[
				"marswe",
				"/Users/Dave/git_repos/marshall_webapp/marshall_webapp.sublime-project"
			],
			[
				"pm",
				"/Users/Dave/git_repos/pessto_marshall_engine/pm_engine.sublime-project"
			],
			[
				"the",
				"/Users/Dave/Desktop/thespacedoctor_exports/_thespacedoctor_to_mysql.sublime-project"
			],
			[
				"mark",
				"/Users/Dave/Dropbox/bitbucket_projects/markdownWiki/markdownWiki.sublime-project"
			],
			[
				"vo",
				"/Users/Dave/Dropbox/github_projects/voodoopad/voodoopad.sublime-project"
			],
			[
				"or",
				"/Users/Dave/Dropbox/github_projects/sublime_snippet_organiser/sublime_snippet_organiser.sublime-project"
			],
			[
				"wo",
				"/Users/Dave/Dropbox/bitbucket_projects/dryx_project_workflow/dryx_project_workflow.sublime-project"
			],
			[
				"\n",
				"/Users/Dave/Dropbox/github_projects/pessto_marshall_webapp/pessto_marshall_webapp.sublime-project"
			],
			[
				"sub",
				"/Users/Dave/Dropbox/github_projects/sublimeAutoSnippets/sublimeAutoSnippets.sublime-project"
			],
			[
				"voo",
				"/Users/Dave/Dropbox/github_projects/voodoopad/voodoopad.sublime-project"
			],
			[
				"qub",
				"/Users/Dave/Dropbox/bitbucket_projects/dryx_qub_webpages/dryx_qub_webpages.sublime-project"
			],
			[
				"thespa",
				"/Users/Dave/Dropbox/bitbucket_projects/thespacedoctor.co.uk/thespacedoctor.sublime-project"
			],
			[
				"weba",
				"/Users/Dave/Dropbox/github_projects/pessto_marshall_webapp/pessto_marshall_webapp.sublime-project"
			],
			[
				"spa",
				"/Users/Dave/Dropbox/bitbucket_projects/thespacedoctor.co.uk/thespacedoctor.sublime-project"
			],
			[
				"sas",
				"/Users/Dave/Dropbox/templates/web/dryx_assets/styles/sass/marshall_sass.sublime-project"
			],
			[
				"sass",
				"/Users/Dave/Dropbox/templates/web/dryx_assets/styles/sass/marshall_sass.sublime-project"
			],
			[
				"jav",
				"/Users/Dave/Dropbox/bitbucket_projects/pessto_marshall/marshall_javascript.sublime-project"
			],
			[
				"java",
				"/Users/Dave/Dropbox/bitbucket_projects/pessto_marshall/marshall_javascript.sublime-project"
			],
			[
				"su",
				"/Users/Dave/Dropbox/github_projects/sublimeAutoSnippets/sublimeAutoSnippets.sublime-project"
			],
			[
				"marh",
				"/Users/Dave/Dropbox/bitbucket_projects/pessto_marshall/pessto_marshall.sublime-project"
			],
			[
				"sa",
				"/Users/Dave/Dropbox/templates/web/dryx_assets/styles/sass/marshall_sass.sublime-project"
			],
			[
				"tb",
				"/Users/Dave/Dropbox/github_projects/python/twitterBootstrap/twitterBootstrap_python.sublime-project"
			],
			[
				"sand",
				"/Users/Dave/Dropbox/WORKSPACES/WORK/sandbox_marshall_svn_repo/sublime_sandbox_workspace.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 600.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 419.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
